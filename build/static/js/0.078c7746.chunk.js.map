{"version":3,"file":"static/js/0.078c7746.chunk.js","mappings":"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","sources":["Components/Feed/Feed.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useTransition } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport \"./Feed.css\";\nimport faultradio from \"../Home/SecondSection/Logos/radio-stations/fault-radio.png\";\nimport kioskradio from \"../Home/SecondSection/Logos/radio-stations/kiosk-radio.png\";\nimport nts from \"../Home/SecondSection/Logos/radio-stations/nts.png\";\nimport thelotradio from \"../Home/SecondSection/Logos/radio-stations/the-lot-radio.png\";\nimport trnstnradio from \"../Home/SecondSection/Logos/radio-stations/trnstn-radio.png\";\n\nconst getLogoByUser = (user) => {\n  switch (user) {\n    case \"faultradio\":\n      return faultradio;\n    case \"kioskradio\":\n      return kioskradio;\n    case \"nts-latest\":\n      return nts;\n    case \"thelotradio\":\n      return thelotradio;\n    case \"trnstnradio\":\n      return trnstnradio;\n    default:\n      return null;\n  }\n};\n\nconst Feed = () => {\n  const [usersData, setUsersData] = useState([]);\n  const [currentRadioStation, setCurrentRadioStation] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const elementsRef = useRef([]);\n  const limit = 5;\n  const lastTrackRef = useRef();\n\n  const [isPending, startTransition] = useTransition({\n    timeoutMs: 3000,\n  });\n\n  const fetchTracks = () => {\n    if (isLoading) {\n      return;\n    }\n    startTransition(() => {\n      setIsLoading(true);\n      fetch(\n        `http://localhost:4000/api/soundcloud?offset=${offset}&limit=${limit}`\n      )\n        .then((response) => {\n          if (!response.ok)\n            throw new Error(\"Request failed with status \" + response.status);\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          setUsersData((oldData) => [...oldData, ...data.message]);\n          setOffset((oldOffset) => oldOffset + limit);\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setIsLoading(false);\n        });\n    });\n  };\n\n  useEffect(() => {\n    fetchTracks();\n  }, []);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setCurrentRadioStation(entry.target.dataset.user);\n          }\n        });\n      },\n      { threshold: 0.5 }\n    );\n\n    elementsRef.current.forEach((element) => {\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    return () => {\n      elementsRef.current.forEach((element) => {\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [usersData]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && !isLoading) {\n            fetchTracks(); // Fetch more tracks when last track is in view\n          }\n        });\n      },\n      { threshold: 0.2 }\n    );\n\n    if (lastTrackRef.current) {\n      observer.observe(lastTrackRef.current);\n    }\n\n    return () => {\n      if (lastTrackRef.current) {\n        observer.unobserve(lastTrackRef.current);\n      }\n    };\n  }, [usersData, isLoading]);\n\n  return (\n    <div className=\"feed\">\n      <h1>{isPending ? \"Loading...\" : null}</h1>\n      <h1>\n        Feed me <br className=\"break-title\" />\n        new music\n      </h1>\n      <div className=\"rotate-div\"></div>\n      <div className=\"img-container\">\n        {usersData.length > 0 && (\n          <img\n            src={getLogoByUser(currentRadioStation)}\n            className=\"radio-station-img\"\n            alt={currentRadioStation}\n          />\n        )}\n      </div>\n\n      {usersData.map((data, index) => {\n        const isLastItem = index === usersData.length - 1;\n        return (\n          <div\n            className=\"feed-player-container\"\n            data-user={data.user}\n            ref={(element) => {\n              elementsRef.current.push(element);\n              if (isLastItem) lastTrackRef.current = element;\n            }}\n            key={index}\n          >\n            <ReactPlayer url={data.track.url} className=\"react-player\" />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Feed;\n"],"names":["getLogoByUser","user","faultradio","kioskradio","nts","thelotradio","trnstnradio","_useState","useState","_useState2","_slicedToArray","usersData","setUsersData","_useState3","_useState4","currentRadioStation","setCurrentRadioStation","_useState5","_useState6","offset","setOffset","_useState7","_useState8","isLoading","setIsLoading","elementsRef","useRef","lastTrackRef","_useTransition","useTransition","timeoutMs","_useTransition2","isPending","startTransition","fetchTracks","fetch","concat","then","response","ok","Error","status","json","data","console","log","oldData","_toConsumableArray","message","oldOffset","catch","error","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","dataset","threshold","current","element","observe","unobserve","_jsxs","className","children","_jsx","length","src","alt","map","index","isLastItem","ref","push","ReactPlayer","url","track"],"sourceRoot":""}