{"ast":null,"code":"var _jsxFileName = \"/Users/Carlito/Desktop/repos/sinecloud_frontend/src/Components/Feed/Feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useTransition, useCallback } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport \"./Feed.css\";\nimport faultradio from \"../Home/SecondSection/Logos/radio-stations/fault-radio.png\";\nimport kioskradio from \"../Home/SecondSection/Logos/radio-stations/kiosk-radio.png\";\nimport nts from \"../Home/SecondSection/Logos/radio-stations/nts.png\";\nimport thelotradio from \"../Home/SecondSection/Logos/radio-stations/the-lot-radio.png\";\nimport trnstnradio from \"../Home/SecondSection/Logos/radio-stations/trnstn-radio.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLogoByUser = user => {\n  switch (user) {\n    case \"faultradio\":\n      return faultradio;\n    case \"kioskradio\":\n      return kioskradio;\n    case \"nts-latest\":\n      return nts;\n    case \"thelotradio\":\n      return thelotradio;\n    case \"trnstnradio\":\n      return trnstnradio;\n    default:\n      return null;\n  }\n};\nconst Feed = () => {\n  _s();\n  const [usersData, setUsersData] = useState([]);\n  const [currentRadioStation, setCurrentRadioStation] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const elementsRef = useRef([]);\n  const limit = 5;\n  const lastTrackRef = useRef();\n  const [isPending, startTransition] = useTransition({\n    timeoutMs: 3000\n  });\n  const fetchTracks = useCallback(() => {\n    if (isLoading) {\n      return;\n    }\n    startTransition(() => {\n      setIsLoading(true);\n      fetch(`https://sinecloud-server.onrender.com/api/soundcloud`).then(response => {\n        if (!response.ok) throw new Error(\"Request failed with status \" + response.status);\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        setUsersData(oldData => [...oldData, ...data.message]);\n        setOffset(oldOffset => oldOffset + limit);\n        setIsLoading(false);\n      }).catch(error => {\n        console.error(error);\n        setIsLoading(false);\n      });\n    });\n  }, [isLoading, offset, limit]); // Include all dependencies used inside fetchTracks\n\n  useEffect(() => {\n    fetchTracks();\n  }, [fetchTracks]); // Now fetchTracks is memoized, so it won't cause the effect to run unnecessarily\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setCurrentRadioStation(entry.target.dataset.user);\n        }\n      });\n    }, {\n      threshold: 0.5\n    });\n    elementsRef.current.forEach(element => {\n      if (element) {\n        observer.observe(element);\n      }\n    });\n    return () => {\n      elementsRef.current.forEach(element => {\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [usersData]);\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting && !isLoading) {\n          fetchTracks(); // Fetch more tracks when last track is in view\n        }\n      });\n    }, {\n      threshold: 0.2\n    });\n    if (lastTrackRef.current) {\n      observer.observe(lastTrackRef.current);\n    }\n    return () => {\n      if (lastTrackRef.current) {\n        observer.unobserve(lastTrackRef.current);\n      }\n    };\n  }, [usersData, isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isPending ? \"Loading...\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Feed me \", /*#__PURE__*/_jsxDEV(\"br\", {\n        className: \"break-title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), \"new music\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rotate-div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: usersData.length > 0 && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getLogoByUser(currentRadioStation),\n        className: \"radio-station-img\",\n        alt: currentRadioStation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), usersData.map((data, index) => {\n      const isLastItem = index === usersData.length - 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-player-container\",\n        \"data-user\": data.user,\n        ref: element => {\n          elementsRef.current.push(element);\n          if (isLastItem) lastTrackRef.current = element;\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: data.track.url,\n          className: \"react-player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"wukJRLrYNJKMUDTevvF4uGHAyrs=\", false, function () {\n  return [useTransition];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useTransition","useCallback","ReactPlayer","faultradio","kioskradio","nts","thelotradio","trnstnradio","jsxDEV","_jsxDEV","getLogoByUser","user","Feed","_s","usersData","setUsersData","currentRadioStation","setCurrentRadioStation","offset","setOffset","isLoading","setIsLoading","elementsRef","limit","lastTrackRef","isPending","startTransition","timeoutMs","fetchTracks","fetch","then","response","ok","Error","status","json","data","console","log","oldData","message","oldOffset","catch","error","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","dataset","threshold","current","element","observe","unobserve","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","alt","map","index","isLastItem","ref","push","url","track","_c","$RefreshReg$"],"sources":["/Users/Carlito/Desktop/repos/sinecloud_frontend/src/Components/Feed/Feed.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  useTransition,\n  useCallback,\n} from \"react\";\nimport ReactPlayer from \"react-player\";\nimport \"./Feed.css\";\nimport faultradio from \"../Home/SecondSection/Logos/radio-stations/fault-radio.png\";\nimport kioskradio from \"../Home/SecondSection/Logos/radio-stations/kiosk-radio.png\";\nimport nts from \"../Home/SecondSection/Logos/radio-stations/nts.png\";\nimport thelotradio from \"../Home/SecondSection/Logos/radio-stations/the-lot-radio.png\";\nimport trnstnradio from \"../Home/SecondSection/Logos/radio-stations/trnstn-radio.png\";\n\nconst getLogoByUser = (user) => {\n  switch (user) {\n    case \"faultradio\":\n      return faultradio;\n    case \"kioskradio\":\n      return kioskradio;\n    case \"nts-latest\":\n      return nts;\n    case \"thelotradio\":\n      return thelotradio;\n    case \"trnstnradio\":\n      return trnstnradio;\n    default:\n      return null;\n  }\n};\n\nconst Feed = () => {\n  const [usersData, setUsersData] = useState([]);\n  const [currentRadioStation, setCurrentRadioStation] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const elementsRef = useRef([]);\n  const limit = 5;\n  const lastTrackRef = useRef();\n\n  const [isPending, startTransition] = useTransition({\n    timeoutMs: 3000,\n  });\n\n  const fetchTracks = useCallback(() => {\n    if (isLoading) {\n      return;\n    }\n    startTransition(() => {\n      setIsLoading(true);\n      fetch(`https://sinecloud-server.onrender.com/api/soundcloud`)\n        .then((response) => {\n          if (!response.ok)\n            throw new Error(\"Request failed with status \" + response.status);\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          setUsersData((oldData) => [...oldData, ...data.message]);\n          setOffset((oldOffset) => oldOffset + limit);\n          setIsLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setIsLoading(false);\n        });\n    });\n  }, [isLoading, offset, limit]); // Include all dependencies used inside fetchTracks\n\n  useEffect(() => {\n    fetchTracks();\n  }, [fetchTracks]); // Now fetchTracks is memoized, so it won't cause the effect to run unnecessarily\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setCurrentRadioStation(entry.target.dataset.user);\n          }\n        });\n      },\n      { threshold: 0.5 }\n    );\n\n    elementsRef.current.forEach((element) => {\n      if (element) {\n        observer.observe(element);\n      }\n    });\n\n    return () => {\n      elementsRef.current.forEach((element) => {\n        if (element) {\n          observer.unobserve(element);\n        }\n      });\n    };\n  }, [usersData]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting && !isLoading) {\n            fetchTracks(); // Fetch more tracks when last track is in view\n          }\n        });\n      },\n      { threshold: 0.2 }\n    );\n\n    if (lastTrackRef.current) {\n      observer.observe(lastTrackRef.current);\n    }\n\n    return () => {\n      if (lastTrackRef.current) {\n        observer.unobserve(lastTrackRef.current);\n      }\n    };\n  }, [usersData, isLoading]);\n\n  return (\n    <div className=\"feed\">\n      <h1>{isPending ? \"Loading...\" : null}</h1>\n      <h1>\n        Feed me <br className=\"break-title\" />\n        new music\n      </h1>\n      <div className=\"rotate-div\"></div>\n      <div className=\"img-container\">\n        {usersData.length > 0 && (\n          <img\n            src={getLogoByUser(currentRadioStation)}\n            className=\"radio-station-img\"\n            alt={currentRadioStation}\n          />\n        )}\n      </div>\n\n      {usersData.map((data, index) => {\n        const isLastItem = index === usersData.length - 1;\n        return (\n          <div\n            className=\"feed-player-container\"\n            data-user={data.user}\n            ref={(element) => {\n              elementsRef.current.push(element);\n              if (isLastItem) lastTrackRef.current = element;\n            }}\n            key={index}\n          >\n            <ReactPlayer url={data.track.url} className=\"react-player\" />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IACVC,QAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,aAAa,EACbC,WAAW,QACN,OAAO;AACd,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,YAAY;AACnB,OAAOC,UAAU,MAAM,4DAA4D;AACnF,OAAOC,UAAU,MAAM,4DAA4D;AACnF,OAAOC,GAAG,MAAM,oDAAoD;AACpE,OAAOC,WAAW,MAAM,8DAA8D;AACtF,OAAOC,WAAW,MAAM,6DAA6D;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC9B,QAAQA,IAAI;IACV,KAAK,YAAY;MACf,OAAOR,UAAU;IACnB,KAAK,YAAY;MACf,OAAOC,UAAU;IACnB,KAAK,YAAY;MACf,OAAOC,GAAG;IACZ,KAAK,aAAa;MAChB,OAAOC,WAAW;IACpB,KAAK,aAAa;MAChB,OAAOC,WAAW;IACpB;MACE,OAAO,IAAI;EACf;AACF,CAAC;AAED,MAAMK,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMyB,WAAW,GAAGvB,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAMwB,KAAK,GAAG,CAAC;EACf,MAAMC,YAAY,GAAGzB,MAAM,CAAC,CAAC;EAE7B,MAAM,CAAC0B,SAAS,EAAEC,eAAe,CAAC,GAAG1B,aAAa,CAAC;IACjD2B,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAG3B,WAAW,CAAC,MAAM;IACpC,IAAImB,SAAS,EAAE;MACb;IACF;IACAM,eAAe,CAAC,MAAM;MACpBL,YAAY,CAAC,IAAI,CAAC;MAClBQ,KAAK,CAAE,sDAAqD,CAAC,CAC1DC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGF,QAAQ,CAACG,MAAM,CAAC;QAClE,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjBrB,YAAY,CAAEwB,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAE,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC;QACxDrB,SAAS,CAAEsB,SAAS,IAAKA,SAAS,GAAGlB,KAAK,CAAC;QAC3CF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;QACpBtB,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,EAAE,CAACD,SAAS,EAAEF,MAAM,EAAEK,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEhCzB,SAAS,CAAC,MAAM;IACd8B,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB9B,SAAS,CAAC,MAAM;IACd,MAAM8C,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxBhC,sBAAsB,CAAC+B,KAAK,CAACE,MAAM,CAACC,OAAO,CAACxC,IAAI,CAAC;QACnD;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEyC,SAAS,EAAE;IAAI,CACnB,CAAC;IAED9B,WAAW,CAAC+B,OAAO,CAACN,OAAO,CAAEO,OAAO,IAAK;MACvC,IAAIA,OAAO,EAAE;QACXV,QAAQ,CAACW,OAAO,CAACD,OAAO,CAAC;MAC3B;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXhC,WAAW,CAAC+B,OAAO,CAACN,OAAO,CAAEO,OAAO,IAAK;QACvC,IAAIA,OAAO,EAAE;UACXV,QAAQ,CAACY,SAAS,CAACF,OAAO,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACxC,SAAS,CAAC,CAAC;EAEfhB,SAAS,CAAC,MAAM;IACd,MAAM8C,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,IAAI,CAAC7B,SAAS,EAAE;UACtCQ,WAAW,CAAC,CAAC,CAAC,CAAC;QACjB;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEwB,SAAS,EAAE;IAAI,CACnB,CAAC;IAED,IAAI5B,YAAY,CAAC6B,OAAO,EAAE;MACxBT,QAAQ,CAACW,OAAO,CAAC/B,YAAY,CAAC6B,OAAO,CAAC;IACxC;IAEA,OAAO,MAAM;MACX,IAAI7B,YAAY,CAAC6B,OAAO,EAAE;QACxBT,QAAQ,CAACY,SAAS,CAAChC,YAAY,CAAC6B,OAAO,CAAC;MAC1C;IACF,CAAC;EACH,CAAC,EAAE,CAACvC,SAAS,EAAEM,SAAS,CAAC,CAAC;EAE1B,oBACEX,OAAA;IAAKgD,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBjD,OAAA;MAAAiD,QAAA,EAAKjC,SAAS,GAAG,YAAY,GAAG;IAAI;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1CrD,OAAA;MAAAiD,QAAA,GAAI,UACM,eAAAjD,OAAA;QAAIgD,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,aAExC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLrD,OAAA;MAAKgD,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClCrD,OAAA;MAAKgD,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B5C,SAAS,CAACiD,MAAM,GAAG,CAAC,iBACnBtD,OAAA;QACEuD,GAAG,EAAEtD,aAAa,CAACM,mBAAmB,CAAE;QACxCyC,SAAS,EAAC,mBAAmB;QAC7BQ,GAAG,EAAEjD;MAAoB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELhD,SAAS,CAACoD,GAAG,CAAC,CAAC9B,IAAI,EAAE+B,KAAK,KAAK;MAC9B,MAAMC,UAAU,GAAGD,KAAK,KAAKrD,SAAS,CAACiD,MAAM,GAAG,CAAC;MACjD,oBACEtD,OAAA;QACEgD,SAAS,EAAC,uBAAuB;QACjC,aAAWrB,IAAI,CAACzB,IAAK;QACrB0D,GAAG,EAAGf,OAAO,IAAK;UAChBhC,WAAW,CAAC+B,OAAO,CAACiB,IAAI,CAAChB,OAAO,CAAC;UACjC,IAAIc,UAAU,EAAE5C,YAAY,CAAC6B,OAAO,GAAGC,OAAO;QAChD,CAAE;QAAAI,QAAA,eAGFjD,OAAA,CAACP,WAAW;UAACqE,GAAG,EAAEnC,IAAI,CAACoC,KAAK,CAACD,GAAI;UAACd,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAFxDK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGP,CAAC;IAEV,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjD,EAAA,CAhIID,IAAI;EAAA,QAS6BZ,aAAa;AAAA;AAAAyE,EAAA,GAT9C7D,IAAI;AAkIV,eAAeA,IAAI;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}